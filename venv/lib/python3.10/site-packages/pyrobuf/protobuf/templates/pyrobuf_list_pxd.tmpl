from libc.stdint cimport *
from cpython cimport Py_buffer


cdef class TypedList(list):
    
    cdef type _list_type
    cdef object _listener


cdef class BytesList(list):

    cdef object _listener


cdef class StringList(list):

    cdef object _listener


{% macro scalar_list(name, type) %}
cdef class {{ name }}:

    cdef {{ type }} *_data
    cdef size_t _n_items
    cdef size_t _size
    cdef object _listener
    cdef Py_ssize_t shape[1]
    cdef Py_ssize_t strides[1]

    cdef void _append(self, {{ type }} x)

    cpdef _equal(self, other)
    cpdef append(self, {{ type }} x)
    cpdef extend(self, x)
    cpdef insert(self, int i, {{ type }} x)
    cpdef pop(self)
    cpdef remove(self, {{ type }} x)

{% endmacro %}

{% for name, type in def.items() %}
{{ scalar_list(name, type) }}
{% endfor %}
